# avoid double inclusion
if test "${transmission__imported+defined}" == "defined"; then
  return 0
fi
transmission__imported=1


# Service Status & App Config Output
# ---------------------------------------------------------------------------------------

function transmission__get_status() {
  if service transmission-daemon status 2>&1 | grep -q "unrecognized service"; then
    status="Not Installed"
  elif service transmission-daemon status > /dev/null 2>&1; then
    if ls /etc/rc?.d/*transmission-daemon > /dev/null 2>&1; then
      status="Enabled|Running"
    else
      status="Disabled|Running"
    fi
  elif ls /etc/rc?.d/*transmission-daemon > /dev/null 2>&1; then
    status="Enabled|Stopped"
  else
    status="Disabled|Stopped"
  fi
  echo "$status"
}

function transmission__show_config() {
  status=$(transmission__get_status)

  echo "Transmission Config:"
  echo "----------------------------"
  echo "Status: $status"
  if [ "$status" == "Enabled|Running" ]; then
		username=$(transmission__get_username)
		password=$(transmission__get_password)
		port=$(transmission__get_port)
		ipv4=$(tools__get_ip)
	
		if echo "$(proxy__get_status)" | egrep -q "^Enabled|Running$"; then
			url="http://$ipv4/transmission"
		else
			url="http://$ipv4:$port/"
		fi
		
    echo "Web UI: $url"
    echo
    echo "Username: $username"
    echo "Password: $password"
  fi
}


# Service Controls
# ---------------------------------------------------------------------------------------

function transmission__enable() {
  if echo "$(transmission__get_status)" | grep -q "^Disabled"; then
    echo "* Enabling Transmission"
    update-rc.d transmission-daemon defaults
  fi
}

function transmission__disable() {
  if echo "$(transmission__get_status)" | grep -q "^Enabled"; then
    echo "* Disabling Transmission"
    transmission__stop
    update-rc.d -f transmission-daemon remove
  fi
}

function transmission__start() {
  if echo "$(transmission__get_status)" | grep -q "^Enabled"; then
    for i in {1..3}; do
      if [ $i -gt 1 ]; then
        sleep 2
      fi
      if [ "$(transmission__get_status)" != "Enabled|Running" ]; then
        service transmission-daemon start
      else
        break
      fi
    done
  fi
}

function transmission__stop() {
  for i in {1..3}; do
    if [ $i -gt 1 ]; then
      sleep 2
    fi
    if echo "$(transmission__get_status)" | grep -q "Running$"; then
      service transmission-daemon stop
    else
      break
    fi
  done
}


# Get App Configuration
# ---------------------------------------------------------------------------------------

function transmission__get_username() {
  username=$(grep "rpc-username" $transmissionConfig | awk '{ print $2 }' | awk -F '"' '{ print $2 }')
  
  echo "$username"
}

function transmission__get_password() {
  password="N/A (ENCRYPTED)"
  
  echo "$password"
}

function transmission__get_port() {
  port=$(grep "rpc-port" $transmissionConfig | awk '{ print $2 }' | sed 's/,$//g')
  
  echo "$port"
}


# Set App Configuration
# ---------------------------------------------------------------------------------------

function transmission__set_username() {
  username="$1"
  username=$(echo "$username" | sed 's/\//\\\//g')

  transmission__stop
  sed -i -e 's/"rpc-username".*/"rpc-username": "'$username'",/g' $transmissionConfig
}

function transmission__set_password() {
  password="$1"
  password=$(echo "$password" | sed 's/\//\\\//g')

  transmission__stop
  sed -i -e 's/"rpc-password".*/"rpc-password": "'$password'",/g' $transmissionConfig
}

function transmission__set_port() {
  port="$1"
  port=$(echo "$port" | sed 's/\//\\\//g')

  transmission__stop
  sed -i -e 's/"rpc-port".*/"rpc-port": '$port',/g' $transmissionConfig
}


# Install, Configure & Upgrade
# ---------------------------------------------------------------------------------------

function transmission__install() {
  echo "* Installing Transmission"
  
  # Install NzbDrone
  apt-get -q -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
    install transmission-daemon
  
  # Stop the app, apt-get install sometimes automatically enables and starts apps
  transmission__stop
  
  # Copy/Replace the init file
  tar xf $configBundle --strip-components 2 -C /etc/init.d/ config/init.d/transmission-daemon
  
  # Copy/Replace the default config file
  tar xf $configBundle --strip-components 2 -C /etc/default/ config/default/transmission-daemon 
  
  # Copy the config/data directory into appdata
  if [ ! -d "$transmissionData" ]; then
    sudo su -c -u $osUser \
      "tar xf $appdataBundle --strip-components 1 -C $tretflixPath/appdata/ appdata/transmission-daemon"
  fi
}

function transmission__uninstall() {
  echo "* Uninstalling Transmission"

  # Stop the app
  transmission__stop

  # uninstall transmission
  sudo apt-get -q -y purge transmission-daemon
  sudo apt-get -y autoremove

  # remove the config/data directory 
  if [ -d "$tretflixPath/appdata/transmission-daemon" ]; then
    sudo rm -r "$tretflixPath/appdata/transmission-daemon"
  fi
}


function transmission__upgrade() {
  echo "* Upgrading Transmission"
  
  transmission__stop
  apt-get -q -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
    install transmission-daemon
}

function transmission__version_check() {
  output=$(apt-cache policy transmission-daemon 2>&1)
  installedVers=$(echo "$output" | grep "Installed:" | awk '{ print $2 }')
  candidateVers=$(echo "$output" | grep "Candidate:" | awk '{ print $2 }')

  if [ "$installedVers" == "$candidateVers" ]; then
    echo "Transmission is up-to-date"
    false
  else
    true
  fi
}


# Misc, Extras
# ---------------------------------------------------------------------------------------

function transmission__fixit() {
  echo "Coming Soon..."
}
